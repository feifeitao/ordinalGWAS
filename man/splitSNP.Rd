% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splitSNP.R
\name{splitSNP}
\alias{splitSNP}
\title{Add A1 Allele and Genetic Model in ordinalGWAS Results}
\usage{
splitSNP(results)
}
\arguments{
\item{results}{The result data frame from runAnalysis().}
}
\value{
A new result data frame with A1 allele (for A and AD models) and genetic model (for AD model only). Columns include:
\itemize{
  \item Phenotype - Phenotype analyzed.
  \item SNP - SNP name.
  \item A1 - The effect allele.
  \item BETA - Beta value from regression analysis.
  \item SE - Standard error of the beta value.
  \item Tvalue - Test statistic.
  \item P - P value.
  \item OR - Odds ratio.
  \item L95 - Lower boundary of 0.95 confidence interval for odds ratio.
  \item U95 - Upper boundary of 0.95 confidence interval for odds ratio.
  \item Model - Genetic model (for input data of AD model only): Additive or Dominant.
}
}
\description{
By default, the SNP names generated from plink --recode A/AD are formatted as SNP_A1 (additive model) or SNP_HET (dominant model). This function splits this column into SNP and A1 in the results. For AD model, a new Model column is added in the results.
}
\examples{
File.A <- system.file("extdata", "example.A.raw", package="ordinalGWAS")
File.AD <- system.file("extdata", "example.AD.raw", package="ordinalGWAS")
File.pheno <- system.file("extdata", "example.pheno.txt", package="ordinalGWAS")
File.covar <- system.file("extdata", "example.covar.txt", package="ordinalGWAS")
File.pheno.covar <- system.file("extdata", "example.pheno.covar.txt", package="ordinalGWAS")

# Run analysis for a genotype file of additive model. Split SNP name into SNP and A1.
myObj <- loadData( geno.file=File.A, pheno.file=File.pheno, covar.file=File.covar )
checkedObj <- checkData( obj=myObj, pheno.name=c("PHENOTYPE1","PHENOTYPE2"),  covar.name=c("COVARIATE1","COVARIATE2") )
results <- runAnalysis( obj=checkedObj )
new.results <- splitSNP(results)

# Run analysis with a genotype file of AD model. Add A1 and genetic model columns.
myObj <- loadData( geno.file=File.AD, pheno.file=File.pheno, covar.file=File.covar )
checkedObj <- checkData( obj=myObj, pheno.name=c("PHENOTYPE1","PHENOTYPE2"),  covar.name=c("COVARIATE1","COVARIATE2") )
results <- runAnalysis( obj=checkedObj )
new.results <- splitSNP(results)

}
